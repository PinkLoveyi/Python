Pandas
import pandas as pd
import numpy  as np
s = pd.Series([1,3,6,np.nan,44,1])
print(s)

dates = pd.date_range('20160101',periods=6)#data type:data
print(dates)
df = pd.DataFrame(np.random.randn(6,4),index=dates,colums=['a','b','c','d'])
print(df) #不给index就默认


df2 = pd.DataFrame({'A':1.,
			'B':pd.Timestamp('20130102'),
			'C':pd.Series(1,index=list(range(4)),dtype='float32'),
			'D':np.array([3]*4,dtype='int32'),
			'E':pd.Categorical(["test","train","test","train"]),
			'F':'foo'})
print(df2)   
print(df2.dtypes)
print(df2.index)  #序号
print(df2.columns)
print(df2.values)
print(df2.describe())#只能描述数据
print(df2.sort_index(axis=1,ascending=False))
print(df2.sort_index(axis=0,ascending=False))
print(df2.sort_values(by='E'))#sort by value of column 'E'

#Select DATA
dates = pd.date_range('20130101',periods=6)
df = pd.DataFrame(np.arange(24).reshape((6,4)),index=dates,columns=['A','B','C','D'])
print(df['A'],df.A)
print(df[0:3],df['20130102':'20130104'])
#select by label
print(df.loc['20130102'])
print(df.loc[:,['A','B']])
print(df.loc['20130102',['A','B']])
#select by position
print(df.iloc[3])
print(df.iloc[3,1])
print(df.iloc[3:5,1:3])
print(df.iloc[[1,3,5]],1:3)
#mixed select:ix
print(df.ix[:3,['A','C']])
#Boolean indexing
print(df[df.A>8])

#设置值
df.iloc[3,1] = 111
print(df)
df.loc['20130101','B']=222
print(df)
df[df.A>4]=0 #operate on all columns
print(df)
df.A[df.A>4]=0 #operate on one column A
print(df) 
df.B[df.A>4]=0 #operate on one column B
print(df)
df['F'] = np.nan
print(df)
df['E'] = pd.Series([1,2,3,4,5,6],index=pd.date_range('20130101',periods=6))
print(df)

#Handle loss data
dates = pd.date_range('20130101',periods=6)
df = pd.DataFrame(np.arange(24).reshape((6,4)),index=dates,columns=['A','B','C','D'])
df.iloc[0,1] = np.nan
df.iloc[1,2] = np.nan
print(df.dropna(axis=0,how='any'))#how = {'any','all'} any:if have one nan,drop all:only all #elements are nan,drop
print(df.fillna(value=0))
print(df.isnull())
#if matrex is too large
print(np.any(df.isnull())== True)

#import /export
import pandas as pd
data = pd.read_csv('student.csv')
print(data)
data.to_pickle('student.pickle')

#Concatenating
df1=pd.DataFrame(np.ones((3,4))*0,columns=['A','B','C','D'])
df2=pd.DataFrame(np.ones((3,4))*1,columns=['A','B','C','D'])
df3=pd.DataFrame(np.ones((3,4))*2,columns=['A','B','C','D'])
res = pd.concat([df1,df2，df3],axis=0)
print(res)
res = pd.concat([df1,df2，df3],axis=0,ignore_index=True)
#join,['inner','outer']
df1=pd.DataFrame(np.ones((3,4))*0,columns=['A','B','C','D'],index=[1,2,3])
df2=pd.DataFrame(np.ones((3,4))*1,columns=['B','C','D','E'],index=[2,3,4])
res = pd.concat([df1,df2],join='outer')#column derection;same index merge(上下),null->nan
print(res)
res = pd.concat([df1,df2],join='inner')#column derection;drop index(not same),merge same index
print(res)
res = pd.concat([df1,df2],join='outer',ignore_index=True)
print(res)

#join_axes:column according to  
res = pd.concat([df1,df2],axis=1,join_axes=[df1.index])# left,right merge 
print(res)

#delete join_axes
res = pd.concat([df1,df2],axis=1)
print(res)

#append
s1 = pd.Series(s1,ignore_index=True)

#Merge
#merging two df by key/keys
left = pd.DataFram({'key':['K0','K1','K2','K3'],
		    'A':['A0','A1','A2','A3'],
		    'B':['B0','B1','B2','B3'],})
right= pd.DataFram({'key':['K0','K1','K2','K3'],
		    'C':['c0','c1','c2','c3'],
		    'D':['d0','d1','d2','d3'],})
#one key
res = pd.merge(left,right,on='key')#column
print(res)
# two keys
left = pd.DataFram({'key1':['K0','K0','K1','K2'],
		    'key2':['K0','K1','K0','K1'],
		    'A':['A0','A1','A2','A3'],
		    'B':['B0','B1','B2','B3'],})
right= pd.DataFram({'key1':['K0','K1','K1','K2'],
		    'key2':['K0','K0','K0','K0'],
		    'C':['c0','c1','c2','c3'],
		    'D':['d0','d1','d2','d3'],})
#how = left,right,inner,outter
res = pd.merge(left,right,on=['key1','key2'],how='inner')
#indicator
df1 = pd.DataFrame({'col1':[0,1],'col_left':['a','b' ]})
df2 = pd.DataFrame({'col1':[1,2,2],'col_right':[2,2,2]})
res = pd.merge(df1,df2,on='col1',how='outer',indicator=True)
print(res)
#merge by index
left = pd.DataFram({
		    'A':['A0','A1','A2'],
		    'B':['B0','B1','B2'],},
		   index=['K0','K1','K2'])
right= pd.DataFram({
		    'C':['c0','c1','c2'],
		    'D':['d0','d1','d2'],},
		    index=['K0','K2','K3'])

#Plot
import matplotlib.pyplot as plt

#data = pd.Series(np.random.randn(1000,4),
			index=np.arange(1000),
			columns=list("ABCD"))
data = data.cumsum()
(1)data.plot()
   plt.show()
#plot methods
#'bar','hist','box','kde','scatter'
(2)ax = data.plot.scatter(x='A',y='B',color='DarkBlue',label='Class1')
   data.plot.scatter(x='A',y='C',color='DarkGreen',label='Class2',ax=ax)#ax=ax:at the same  coordinate system 
   plt.show()
