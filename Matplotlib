import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(-1,1,50) #from -1 to 1,50points
y1 = 2*x + 1
y2 = x**2

plt.figure()#an image
plt.plot(x,y1)

plt.figure(num = 3,figsize=(8,5))#an image,无参数，则默认  num:Figure 3
plt.plot(x,y2)#two lines in the same images
plt.plot(x,y1,color='red',linewidth=1.0,linestyle='--')
			 # chage gap size[-1,2]
plt.xlim((-1,2))    #value range(default)----->
plt.ylim((-2,3))		    
plt.xlabel('I am x')#x label		
plt.ylabel('I am y')

#---->
new_ticks = np.linespace(-1,2,5)
plt.xticks(new_ticks)
ply.yticks([-2,-1.8,-1,1.22,3],
	   ['really bad','bad','normal','good','really good'])
#change Font

#change coordinate
#gca = 'get current axis'
ax =plt.gca()
ax.spines['right'].set_color('none')#图片的脊梁（四个边框）
ax.spines['top'].set_color('none')
ax.xaixs_ticks_position('bottom')#下面坐标轴代替x
ax.yaixs_ticks_position('left')
ax.spines['bottom'].set_position(('data',0))#change position
ax.spines['left'].set_position(('data',0))#定位方式outword,axes


#图例
l1,=plt.plot(x,y2,label='up')#have return value
l2,=plt.plot(x,y1,color='red',linewidth=1.0,linestyle='--',label='down')
(1)plt.legend(handles=[l1,l2,],labels=['aaa','bbb'],loc='upper right/best')#
(2)plt.legend(handles=[l1,],labels=['aaa',],loc='upper right/best')#only l1

#Annotation
x0 = 1
y0 = 2*x0+1
plt.scatter(x0,y0,s=50,color='b')
plt.plot([x0,x0],[y0,0],'k--',lw=2.5)
#method 1
plt.annotate(r'$2x+1=%s$'%y0,xy=(x0,y0),xycoords='data',xytext=(+30,-30),textcoords='offset point')

#method 2
plt.text(-3.7,3,r'$This is some text.$')

#Tick
for label in ax.get_xticklabels()+ax.get_yticklabels():
    label.set_fontsize(12)
    label.set_bbox(dict(facecolor='white',edgecolor='None',alpha(透明度)=0.7))
    
#Scatter
n=1024
X = np.random.normal(0,1,n)
Y = np.random.normal(0,1,n)
T = np.arctan2(Y,X)#for color value
plt.scatter(X,Y,s=75,c=T,alpha=0.5)
plt.xlim((-1.5,1.5))
plt.ylim((-1.5,1.5))
plt.xticks(())
plt.yticks(())

#Bar
n = 12
X = np.arange(n)
Y1 = (1-X/float(n))*np.random.uniform(0.5,1.0,n)
Y2 = (1-X/float(n))*np.random.uniform(0.5,1.0,n)

plt.(X,+Y1,facecolor='#9999ff',edgecolor='white')
plt.(X,-Y2,facecolor='#ff9999',edgecolor='white')


for x,y in zip(X,Y1):
	#(用zip每次可以输出两个值)
	#ha:horizontal alignment
	plt.text(x+0.4,y+0.05,'%.2f'%y,ha='center',va='bottom')

for x,y in zip(X,Y2):
	plt.text(x+0.4,-y-0.05,'-%.2f'%y,ha='center',va='top')

plt.xlim((-.5,n))
plt.ylim((-1.25,1.25))
plt.xticks(())
plt.yticks(())

#Contours

#Image
#image data
a=np.array([0.31,0.36,0.42,
	  ,0.36,0.43,0.52
	  ,0.42,0.52,0.65]).reshape(3,3)



plt.imshow(a,interpolation='neatest',cmp='bone',origin='lower')
plt.colorbar(shrink=0.9)

plt.xticks(())
plt.yticks(())
plt.show()

#3D data
from mpl_toolkits.mplot3d import Axes3D

fig = plt.figure()
ax = Axes3D(fig)
#X,Y value
X = np.arrange(-4,4,0.25)
Y = np.arrange(-4,4,0.25)
X,Y = np.meshgrid(X,Y)
R = np.sqrt(X**2+Y**2)
#heigh value
Z=np.sin(R)

ax.

plt.show()

#Subplot多合一显示
plt.figure()

plt.subplot(2,2,1)#divide into 2*2 parts,image in the 1th
plt.plot([0,1],[0,1])

plt.subplot(2,2,2)
plt.plot([0,1],[0,1])

plt.subplot(223)
plt.plot([0,1],[0,1])


plt.subplot(224)
plt.plot([0,1],[0,2])
#调节图片大小
plt.figure()

plt.subplot(2,1,1)#divide image into 2rows,1column,it occupys 1th row
plt.plot([0,1],[0,1])

plt.subplot(2,3,4)#divide image into 2rows,3column,it occupys 2th row
plt.plot([0,1],[0,1])

plt.subplot(235)
plt.plot([0,1],[0,1])

plt.subplot(236)
plt.plot([0,1],[0,2])

#Subplot in grid
import matplotlib.gridspece as gridspece
#method1
plt.figure()
ax1 = plt.subplot2grid((3,3),(0,0),colspan=3,rowspan=1)
ax1.plot([1,2],[1,2])
ax1.set_title('ax1_title')
ax2 = plt.subplot2grid((3,3),(1,0),colspan=2)
ax3 = plt.subplot2grid((3,3),(1,2),rowspan=2)
ax4 = plt.subplot2grid((3,3),(2,0))
ax5 = plt.subplot2grid((3,3),(2,1))

#method2:gridspec
plt.figure()
gs = gridspec.GridSpec(3,3)
ax1 = plt.subplot(gs[0,:])
ax2 = plt.subplot(gs[1,:2])
ax3 = plt.subplot(gs[1:,2])
ax4 = plt.subplot(gs[-1,0])
ax4 = plt.subplot(gs[-1,-2])

#method3:easy to define structure
f,((ax11,ax12),(ax21,ax22)) = plt.subplot(2,2,sharex = True,sharey = True)#share x,y
ax11.scatter([1,2],[1,2])


plt.tight_layout()
plt.show()

#Plot in plot
fig = plt.figure()
x=[1,2,3,4,5,6,7]
y=[1,3,4,2,5,8,6]

left,bottom,width,height = 0.1,0.1,0.8,0.8
ax1 = fig.add_axes([left,bottom,width,height])
ax1.plot(x,y,'r')
ax1.set_xlabel('x')
ax1.set_ylabel('y')
ax1.set_title('title')

left,bottom,width,height = 0.2,0.6,0.25,0.25
ax2 = fig.add_axes([left,bottom,width,height])
ax2.plot(y,x,'b')
ax2.set_xlabel('x')
ax2.set_ylabel('y')
ax2.set_title('inside 1')

#主次坐标轴













plt.show()
