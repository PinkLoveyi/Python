import numpy as np

array = np.array([[1,2,3],
               [4,5,6]]) 
print(array.ndim) //矩阵的维度
print(array.shape)//大小n*m
print(array.size) //  有多少个元素

a = np.array([],dtype=np.int)
print(a.dtype)
>>>int64(默认)

a = np.array([],dtype=np.int32)
print(a.dtype)
>>>int32
data type: float...

a = np.zeros( (3,4) )
np.one( (3,4) )
np.empty( (3,4) )
np.arange(10,20，2) start,end,step >>> [10,12,14,16,18,20]
np.arange(12).reshape((3,4))   >>> [ [0,1,2,3]
            			     [4,5,6,7]
                                     [8,9,10,11]]
np.arange(2,14) [2,3,4....13]

线段
a = np.linspace(1,10,5) 生成从1到10的5条线段

运算
c = a -/+ b
c = b**4 4次方
c = np.sin(a)/cos/tan

b = np.arange(4) [0,1,2,3]
print(b<3)
>>>[1 1 1 0]

乘法
逐个相乘 c = a*b
矩阵乘法 np.dot(a,b)/a.dot(b)

a = np.random.random((2,4))[0,1]间数值 2 row 4cloums
np.sum/min/max(a) sum all
np.sum(a,axis = 1/0) sum colums/rows direction
np.argmin(a) index of minimum 

np.mean(a)/a.mean/np.average(a)
np.median(a) 中位数
np.cumsum(a)累加

np.sort(a) 逐行排序
np.transpose()/a.T

#Index
#one-dim
A=[3,4,5,6]
>>>A[2] = 5
#two-dim
A=[[3,4,5],
　　[6,7,8],
　　[9,10,11]]
>>>A[2] = [9,10,11]
>>>A[2,:]=[9,10,11]
>>>A[2][1]=10
>>>A[2,1]=10
>>>A[2,1:2]=[10]
　　　
#Array merge
np.vstack((a,b))//上下合并
np.hstack((a,b))//左右
　　　
One-dim a = [2,2,3] -> a.reshape(3,1) ->[[2],
　　　					[2],	
　　　					[3]]
#Divide
a = np.range(12).reshape(3,4)
np.split(a,2,axis=1)//列方向,需均分
np.array_split(a,3,axis=1);//不用均分
np.vsplit(a,3)
np.hsplit(a,2)

#Copy
B=a      //指向同一个地方
B=a.copy()//deep copy 只是copy的数值





